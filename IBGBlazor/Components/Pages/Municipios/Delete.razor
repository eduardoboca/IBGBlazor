@page "/municipios/delete"
@inject IBGBlazor.Data.ApplicationDbContext DB
@using IBGBlazor.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Authorization

@rendermode InteractiveServer
@attribute [Authorize]

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Apagar registro?</h3>
<div>
    <hr />
    @if (municipio is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Id</dt>
            <dd class="col-sm-10">@municipio.Codigo_Municipio</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Estado</dt>
            <dd class="col-sm-10">@municipio.Estado.Sigla_UF</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Cidade</dt>
            <dd class="col-sm-10">@municipio.Nome_Municipio</dd>
        </dl>
        <EditForm method="post" Model="municipio" OnValidSubmit="DeleteMunicipio" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(municipio is null)">Apagar</button> |
            <a href="/municipios">Voltar</a>
        </EditForm>
    }
</div>

@code {
    Municipio? municipio;

    [SupplyParameterFromQuery]
    public string Codigo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        municipio = await DB.Municipios.Include(m => m.Estado).FirstOrDefaultAsync(m => m.Codigo_Municipio == Codigo);

        if (municipio is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteMunicipio()
    {
        DB.Municipios.Remove(municipio!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/localidades");
    }
}
