@page "/localidades/import"
@using Microsoft.AspNetCore.Authorization
@using OfficeOpenXml
@inject IBGBlazor.Data.ApplicationDbContext DB
@inject NavigationManager NavigationManager

@rendermode InteractiveServer
@attribute [Authorize]


<h3>Import</h3>

<InputFile OnChange="ImportFromExcel" />

@code {
    private async Task ImportFromExcel(InputFileChangeEventArgs e)
    {
        var browsesrFile = e.File;
        if (browsesrFile != null)
        {
            ExcelPackage.LicenseContext = LicenseContext.NonCommercial;

            var tempFileName = Path.GetTempFileName();
            var extension = Path.GetExtension(browsesrFile.Name);
            tempFileName = Path.ChangeExtension(tempFileName, extension);
            var destinationStream = new FileStream(tempFileName, FileMode.Create);
            await browsesrFile.OpenReadStream().CopyToAsync(destinationStream);
            destinationStream.Close();

            var package = new ExcelPackage(new FileInfo(tempFileName));
            var worksheet = package.Workbook.Worksheets[1];
            var lastRow = worksheet.Dimension.End.Row;

            List<object> jsonList = new List<object>();
            for (int i = 2; i <= lastRow; i++)
            {
                var id = worksheet.Cells[i, 1].Value;
                string? city = worksheet.Cells[i, 2].Value.ToString();
                city = city.Replace("'", "''");
                var state = worksheet.Cells[i, 3].Value;

                Localidade localidade = new Localidade { City = city, Id = id.ToString(), State = state.ToString() };
                DB.IBGE.Add(localidade);
                await DB.SaveChangesAsync();
                
            }
            NavigationManager.NavigateTo("/localidades/");
        }
        else
        {
            // Lógica para lidar com o caso em que nenhum arquivo foi selecionado
            Console.WriteLine("Nenhum arquivo selecionado para upload.");
        }

    }
}
